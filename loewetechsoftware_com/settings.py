"""
Django settings for loewetechsoftware_com project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import environ
from corsheaders.defaults import default_headers
env = environ.Env()
environ.Env.read_env()
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition



INSTALLED_APPS = [
    'corsheaders',
    'logger.apps.LoggerConfig',
    'home.apps.HomeConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djoser',
     'django_crontab',
    'rest_framework',
    'rest_framework.authtoken',


]

CRONJOBS = [
    ('*/1 * * * *', 'scripts.cron_tasks.every_minute'), # every 1 min
    ('*/15 * * * *', 'scripts.cron_tasks.every_15_min'), # every 15 min
    ('0 1 * * *', 'scripts.cron_tasks.every_night'), # every night, 1 am
    ('0 1 * * 1', 'scripts.cron_tasks.every_monday_night'), # 1 am every monday
    ('0 1 1,15 * *', 'scripts.cron_tasks.every_two_weeks'), # 1 am every 1st and 15th of the month

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
      #debug
   # 'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'loewetechsoftware_com.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'loewetechsoftware_com.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

## IMPORTANT before throwing computer out window:
# Put sqlite db outside of codebase, eg ~/db
# Then to codebase:
# sudo chown -R russell:russell ./*
# Then
# chmod 0777 ~/db
# Then:
# ./venv/bin/python3 manage.py migrate
# ./venv/bin/python3 manage.py createsuperuser
# Then 
# set perms on folder to 0700
# then
# sudo chown -R www-data:www-data ~/db

DATABASES = {
'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': env('DBDIR')+'/logger.db',
     }
   # 'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': '',
        # 'USER': '',
        # 'PASSWORD': '',
        # 'HOST': '127.0.0.1',
        # 'PORT': 5432,
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'



USE_TZ = True

TIME_ZONE = 'America/Los_Angeles'
#TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = './static'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    "WWW-Authenticate",
    'HTTP_AUTHORIZATION',
    'Authorization',
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
EMAIL_HOST_USER  = env('EMAIL_HOST_USER')
EMAIL_HOST = 'smtp.zoho.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
